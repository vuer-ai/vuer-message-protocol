[package]
name = "vmp-rs"
version = "0.1.0"
edition = "2024"
authors = ["Ge Yang"]
license = "MIT"
description = "Rust implementation of the Vuer Message Protocol"
repository = "https://github.com/vuer-ai/vuer-message-protocol"
keywords = ["vmp", "vrpc", "messagepack", "rpc", "serialization"]
categories = ["encoding", "network-programming"]

[dependencies]
# Core serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
rmp-serde = "1.3"
rmpv = "1.3"

# Async runtime
tokio = { version = "1.43", features = ["full"], optional = true }

# UUID generation
uuid = { version = "1.11", features = ["v4", "serde"] }

# Error handling
thiserror = "2.0"

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# Optional: NumPy-like arrays
ndarray = { version = "0.16", optional = true, features = ["serde"] }

# Optional: Image support
image = { version = "0.25", optional = true }

# HashMap with stable iteration order
indexmap = { version = "2.7", features = ["serde"] }

# Global static variables
lazy_static = "1.5"

# Binary serialization helpers
serde_bytes = "0.11"
base64 = "0.22"

[dev-dependencies]
# Testing
tokio = { version = "1.43", features = ["full", "test-util"] }
anyhow = "1.0"

[features]
default = ["tokio", "ndarray"]
full = ["tokio", "ndarray", "image"]
async = ["tokio"]
